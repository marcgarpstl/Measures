// <auto-generated />
using System;
using Measure.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Measure.Infrastructure.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20240205093621_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Measure.Domain.Entities.FemaleMeasures", b =>
                {
                    b.Property<Guid>("FemaleMeasureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Biceps")
                        .HasColumnType("int");

                    b.Property<int>("Bust")
                        .HasColumnType("int");

                    b.Property<int>("CrotchAnkle")
                        .HasColumnType("int");

                    b.Property<int>("FootLength")
                        .HasColumnType("int");

                    b.Property<int>("FrontRise")
                        .HasColumnType("int");

                    b.Property<int>("Hip")
                        .HasColumnType("int");

                    b.Property<int>("MidShoulderBust")
                        .HasColumnType("int");

                    b.Property<int>("NapeWaist")
                        .HasColumnType("int");

                    b.Property<int>("ShoulderLength")
                        .HasColumnType("int");

                    b.Property<int>("Thigh")
                        .HasColumnType("int");

                    b.Property<int>("UnderBust")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Waist")
                        .HasColumnType("int");

                    b.Property<int>("Wrist")
                        .HasColumnType("int");

                    b.HasKey("FemaleMeasureId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("FemaleMeasures");
                });

            modelBuilder.Entity("Measure.Domain.Entities.MaleMeasures", b =>
                {
                    b.Property<Guid>("MaleMeasureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ArmLength")
                        .HasColumnType("int");

                    b.Property<int>("Calf")
                        .HasColumnType("int");

                    b.Property<int>("Chest")
                        .HasColumnType("int");

                    b.Property<int>("FootLength")
                        .HasColumnType("int");

                    b.Property<int>("Inseam")
                        .HasColumnType("int");

                    b.Property<int>("Neck")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Waist")
                        .HasColumnType("int");

                    b.HasKey("MaleMeasureId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("MaleMeasures");
                });

            modelBuilder.Entity("Measure.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Measure.Domain.Entities.FemaleMeasures", b =>
                {
                    b.HasOne("Measure.Domain.Entities.User", "User")
                        .WithOne("Female")
                        .HasForeignKey("Measure.Domain.Entities.FemaleMeasures", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Measure.Domain.Entities.MaleMeasures", b =>
                {
                    b.HasOne("Measure.Domain.Entities.User", "User")
                        .WithOne("Male")
                        .HasForeignKey("Measure.Domain.Entities.MaleMeasures", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Measure.Domain.Entities.User", b =>
                {
                    b.Navigation("Female");

                    b.Navigation("Male");
                });
#pragma warning restore 612, 618
        }
    }
}
